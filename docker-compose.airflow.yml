version: '3.8'

x-airflow-common: &airflow-common
  image: apache/airflow:2.8.0-python3.10
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER:-admin}:${POSTGRES_PASSWORD:-admin123}@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW_FERNET_KEY:-12345678901234567890123456789012345678901234}
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
    AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY:-secret12345678901234567890123456789012345678901234}
    AIRFLOW_CONN_SPARK_DEFAULT: spark://spark-master:7077
    AIRFLOW_CONN_S3_DEFAULT: s3://${MINIO_ACCESS_KEY:-minioadmin}:${MINIO_SECRET_KEY:-minioadmin123}@?endpoint_url=http%3A%2F%2Fminio%3A9000
    _AIRFLOW_DB_MIGRATE: 'true'
    _AIRFLOW_WWW_USER_CREATE: 'true'
    _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_USER:-admin}
    _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_PASSWORD:-admin}
  volumes:
    - ./dags:/opt/airflow/dags
    - ./plugins:/opt/airflow/plugins
    - airflow-logs:/opt/airflow/logs
    - shared-workspace:/opt/workspace
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    postgres:
      condition: service_healthy
  networks:
    - data-hub

services:
  airflow-init:
    <<: *airflow-common
    container_name: data-hub-airflow-init
    entrypoint: /bin/bash
    command: >
      -c "
      airflow db init &&
      airflow users create
        --username ${AIRFLOW_USER:-admin}
        --password ${AIRFLOW_PASSWORD:-admin}
        --firstname Admin
        --lastname User
        --role Admin
        --email admin@example.com || true
      "
    environment:
      <<: *airflow-common-env
    restart: on-failure

  airflow-webserver:
    <<: *airflow-common
    container_name: data-hub-airflow-webserver
    command: webserver
    ports:
      - "8088:8080"
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
    restart: unless-stopped
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    networks:
      data-hub:
        ipv4_address: 172.28.1.20

  airflow-scheduler:
    <<: *airflow-common
    container_name: data-hub-airflow-scheduler
    command: scheduler
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
    restart: unless-stopped
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    networks:
      data-hub:
        ipv4_address: 172.28.1.21